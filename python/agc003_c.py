# AtCoder Grand Contest C - BBuBBBlesort!
# https://atcoder.jp/contests/agc003/tasks/agc003_c
# tag: 数列 考察 入れ替え 高橋君

# 隣り合う 3 つの要素を反転できる ＝ 
# 一つ飛ばしの要素を交換できる ＝ 
# 奇数番目（あるいは偶数番目）同士の移動は自由にできる。

# ということは、奇数番目と偶数番目の要素を、何回入れ替える
# 必要があるのか、ということを問われている。

# 目標、つまりソート後の数列を確認し、奇数番目と偶数番目に
# それぞれどのような数字があるのかを確認し、元の状態と
# 違っているものを入れ替える必要がある。

# f.e.
# (1, 3, 2, 4) を元の数列とすると、その奇数番目の数は
# (1, 2)
# 目指す数列は (1, 2, 3, 4) なので、その奇数番目の数は
# (1, 3)
# 1 はそのままでいいが、2 は偶数番目に持っていく（同時に
# 3 を奇数番目に持ってくる）必要がある。

def main():
    N = int(input())
    A = [int(input()) for _ in range(N)]

    # 元の数列の奇数番目のセット
    skip_set = set(A[::2])

    A.sort()

    # 目標の奇数番目のセット
    skip_set2 = set(A[::2])

    # 差分の数を答える
    print(abs(len(skip_set2 - skip_set)))

main()
