# AtCoder Beginner Contest 068 D - Decrease (Contestant ver.)
# https://atcoder.jp/contests/abc068/tasks/arc079_b
# tag: 数列 特殊構造 全体操作 考察

# 最後に全て N-1 になるとして、手前の状態を考えていくと、
# 3 3 3 3
# 7 2 2 2
# 6 6 1 1
# 5 5 5 0
# 4 4 4 4

# 一般化すると
# N-1, N-1, N-1, .... , N-1
# 2N-1, N-2, N-2, N-2, .... , N-2
# 2N-2, 2N-2, N-3, N-3, .... , N-3
# ....
# 2N-(N-1), 2N-(N-1), ...., N-N
# 2N-N, 2N-N, ...., 2N-N

# N 回操作を行うと全体が 1 減るということに注目する。

# 制約に対応しやすいよう、N=50 と固定して考えることにする。
# 最終的な状態を 49, 49, ..., 49 とする。
# K = 50*q + r とすると
# 50回操作を増やすためには、全体に 1 を加えればいい。
# 49+q, 49+q, ... , 49+q
# 余った r 回の操作分の巻き戻しを考えると、
# 49+q+50-(r-1) が r 個、49+q-r が 50-r 個あることになる。

def main():
    K = int(input())

    # 決め打ち
    print(50)

    q, r = divmod(K, 50)
    result = [99+q-r+1] * r + [49+q-r] * (50-r)

    print(*result)
main()
